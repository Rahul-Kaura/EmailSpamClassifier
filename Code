import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report
import os

# Define file paths
extract_path = "/mnt/data/spam_ham_data"
train_file_path = os.path.join(extract_path, "train.csv")
test_file_path = os.path.join(extract_path, "test.csv")

# Load dataset
train_data = pd.read_csv(train_file_path)
test_data = pd.read_csv(test_file_path)

# Data Preprocessing
train_data['email'] = train_data['email'].fillna('').str.lower()
test_data['email'] = test_data['email'].fillna('').str.lower()

# Splitting data
X_train, X_val, y_train, y_val = train_test_split(train_data['email'], train_data['spam'], test_size=0.2, random_state=42)

# Convert text to TF-IDF features
vectorizer = TfidfVectorizer(stop_words='english', max_features=5000)
X_train_tfidf = vectorizer.fit_transform(X_train)
X_val_tfidf = vectorizer.transform(X_val)

# Train a Naive Bayes model
model = MultinomialNB()
model.fit(X_train_tfidf, y_train)

# Evaluate model
predictions = model.predict(X_val_tfidf)
accuracy = accuracy_score(y_val, predictions)
print("Validation Accuracy:", accuracy)
print(classification_report(y_val, predictions))

# Predict on test data
test_tfidf = vectorizer.transform(test_data['email'])
test_predictions = model.predict(test_tfidf)

test_data['spam'] = test_predictions
test_data.to_csv('/mnt/data/spam_predictions.csv', index=False)

print("Predictions saved to /mnt/data/spam_predictions.csv")
